//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "ROSUr_msgs/Ur_msgs_MasterboardDataMsg.hh"

using namespace ROSUr_msgs;

Ur_msgs_MasterboardDataMsg::Ur_msgs_MasterboardDataMsg()
:	Ur_msgs_MasterboardDataMsgCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
Ur_msgs_MasterboardDataMsg::Ur_msgs_MasterboardDataMsg(const unsigned int &digital_input_bits, const unsigned int &digital_output_bits, const char &analog_input_range0, const char &analog_input_range1, const double &analog_input0, const double &analog_input1, const char &analog_output_domain0, const char &analog_output_domain1, const double &analog_output0, const double &analog_output1, const float &masterboard_temperature, const float &robot_voltage_48V, const float &robot_current, const float &master_io_current, const unsigned char &master_safety_state, const unsigned char &master_onoff_state)
:	Ur_msgs_MasterboardDataMsgCore() // base constructor sets default values as defined in the model
{
	setDigital_input_bits(digital_input_bits);
	setDigital_output_bits(digital_output_bits);
	setAnalog_input_range0(analog_input_range0);
	setAnalog_input_range1(analog_input_range1);
	setAnalog_input0(analog_input0);
	setAnalog_input1(analog_input1);
	setAnalog_output_domain0(analog_output_domain0);
	setAnalog_output_domain1(analog_output_domain1);
	setAnalog_output0(analog_output0);
	setAnalog_output1(analog_output1);
	setMasterboard_temperature(masterboard_temperature);
	setRobot_voltage_48V(robot_voltage_48V);
	setRobot_current(robot_current);
	setMaster_io_current(master_io_current);
	setMaster_safety_state(master_safety_state);
	setMaster_onoff_state(master_onoff_state);
}
 */

Ur_msgs_MasterboardDataMsg::Ur_msgs_MasterboardDataMsg(const Ur_msgs_MasterboardDataMsgCore &ur_msgs_MasterboardDataMsg)
:	Ur_msgs_MasterboardDataMsgCore(ur_msgs_MasterboardDataMsg)
{  }

Ur_msgs_MasterboardDataMsg::Ur_msgs_MasterboardDataMsg(const DATATYPE &ur_msgs_MasterboardDataMsg)
:	Ur_msgs_MasterboardDataMsgCore(ur_msgs_MasterboardDataMsg)
{  }

Ur_msgs_MasterboardDataMsg::~Ur_msgs_MasterboardDataMsg()
{  }
