//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef ROSUR_MSGS_UR_MSGS_SETIOREQUEST_CORE_H_
#define ROSUR_MSGS_UR_MSGS_SETIOREQUEST_CORE_H_

#include "ROSUr_msgs/Ur_msgs_SetIORequestData.hh"

#include <iostream>
#include <string>
#include <list>

namespace ROSUr_msgs {
	
class Ur_msgs_SetIORequestCore {
protected:
	// data structure
	ROSUr_msgsIDL::Ur_msgs_SetIORequest idl_Ur_msgs_SetIORequest;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef ROSUr_msgsIDL::Ur_msgs_SetIORequest DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	Ur_msgs_SetIORequestCore();
	Ur_msgs_SetIORequestCore(const DATATYPE &data);
	// default destructor
	virtual ~Ur_msgs_SetIORequestCore();
	
	const DATATYPE& get() const { return idl_Ur_msgs_SetIORequest; }
	operator const DATATYPE&() const { return idl_Ur_msgs_SetIORequest; }
	DATATYPE& set() { return idl_Ur_msgs_SetIORequest; }

	static inline std::string identifier(void) { return "ROSUr_msgs::Ur_msgs_SetIORequest"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element FUN_SET_DIGITAL_OUT
	inline char getFUN_SET_DIGITAL_OUT() const { return idl_Ur_msgs_SetIORequest.FUN_SET_DIGITAL_OUT; }
	inline Ur_msgs_SetIORequestCore& setFUN_SET_DIGITAL_OUT(const char &FUN_SET_DIGITAL_OUT) { idl_Ur_msgs_SetIORequest.FUN_SET_DIGITAL_OUT = FUN_SET_DIGITAL_OUT; return *this; }
	
	// getter and setter for element FUN_SET_FLAG
	inline char getFUN_SET_FLAG() const { return idl_Ur_msgs_SetIORequest.FUN_SET_FLAG; }
	inline Ur_msgs_SetIORequestCore& setFUN_SET_FLAG(const char &FUN_SET_FLAG) { idl_Ur_msgs_SetIORequest.FUN_SET_FLAG = FUN_SET_FLAG; return *this; }
	
	// getter and setter for element FUN_SET_ANALOG_OUT
	inline char getFUN_SET_ANALOG_OUT() const { return idl_Ur_msgs_SetIORequest.FUN_SET_ANALOG_OUT; }
	inline Ur_msgs_SetIORequestCore& setFUN_SET_ANALOG_OUT(const char &FUN_SET_ANALOG_OUT) { idl_Ur_msgs_SetIORequest.FUN_SET_ANALOG_OUT = FUN_SET_ANALOG_OUT; return *this; }
	
	// getter and setter for element FUN_SET_TOOL_VOLTAGE
	inline char getFUN_SET_TOOL_VOLTAGE() const { return idl_Ur_msgs_SetIORequest.FUN_SET_TOOL_VOLTAGE; }
	inline Ur_msgs_SetIORequestCore& setFUN_SET_TOOL_VOLTAGE(const char &FUN_SET_TOOL_VOLTAGE) { idl_Ur_msgs_SetIORequest.FUN_SET_TOOL_VOLTAGE = FUN_SET_TOOL_VOLTAGE; return *this; }
	
	// getter and setter for element STATE_OFF
	inline char getSTATE_OFF() const { return idl_Ur_msgs_SetIORequest.STATE_OFF; }
	inline Ur_msgs_SetIORequestCore& setSTATE_OFF(const char &STATE_OFF) { idl_Ur_msgs_SetIORequest.STATE_OFF = STATE_OFF; return *this; }
	
	// getter and setter for element STATE_ON
	inline char getSTATE_ON() const { return idl_Ur_msgs_SetIORequest.STATE_ON; }
	inline Ur_msgs_SetIORequestCore& setSTATE_ON(const char &STATE_ON) { idl_Ur_msgs_SetIORequest.STATE_ON = STATE_ON; return *this; }
	
	// getter and setter for element STATE_TOOL_VOLTAGE_0V
	inline char getSTATE_TOOL_VOLTAGE_0V() const { return idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_0V; }
	inline Ur_msgs_SetIORequestCore& setSTATE_TOOL_VOLTAGE_0V(const char &STATE_TOOL_VOLTAGE_0V) { idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_0V = STATE_TOOL_VOLTAGE_0V; return *this; }
	
	// getter and setter for element STATE_TOOL_VOLTAGE_12V
	inline char getSTATE_TOOL_VOLTAGE_12V() const { return idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_12V; }
	inline Ur_msgs_SetIORequestCore& setSTATE_TOOL_VOLTAGE_12V(const char &STATE_TOOL_VOLTAGE_12V) { idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_12V = STATE_TOOL_VOLTAGE_12V; return *this; }
	
	// getter and setter for element STATE_TOOL_VOLTAGE_24V
	inline char getSTATE_TOOL_VOLTAGE_24V() const { return idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_24V; }
	inline Ur_msgs_SetIORequestCore& setSTATE_TOOL_VOLTAGE_24V(const char &STATE_TOOL_VOLTAGE_24V) { idl_Ur_msgs_SetIORequest.STATE_TOOL_VOLTAGE_24V = STATE_TOOL_VOLTAGE_24V; return *this; }
	
	// getter and setter for element Fun
	inline char getFun() const { return idl_Ur_msgs_SetIORequest.fun; }
	inline Ur_msgs_SetIORequestCore& setFun(const char &fun) { idl_Ur_msgs_SetIORequest.fun = fun; return *this; }
	
	// getter and setter for element Pin
	inline char getPin() const { return idl_Ur_msgs_SetIORequest.pin; }
	inline Ur_msgs_SetIORequestCore& setPin(const char &pin) { idl_Ur_msgs_SetIORequest.pin = pin; return *this; }
	
	// getter and setter for element State
	inline float getState() const { return idl_Ur_msgs_SetIORequest.state; }
	inline Ur_msgs_SetIORequestCore& setState(const float &state) { idl_Ur_msgs_SetIORequest.state = state; return *this; }
};

} /* namespace ROSUr_msgs */
#endif /* ROSUR_MSGS_UR_MSGS_SETIOREQUEST_CORE_H_ */
