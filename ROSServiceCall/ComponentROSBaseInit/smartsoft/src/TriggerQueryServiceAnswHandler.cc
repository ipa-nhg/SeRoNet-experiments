//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "TriggerQueryServiceAnswHandler.hh"
#include "ComponentROSBaseInit.hh"
#include "std_srvs/Trigger.h"

TriggerQueryServiceAnswHandler::TriggerQueryServiceAnswHandler(IQueryServer *server)
:	TriggerQueryServiceAnswHandlerCore(server)
{
	
}


void TriggerQueryServiceAnswHandler::handleQuery(const Smart::QueryIdPtr &id, const ROSRos_core::Std_srvs_TriggerRequest& request) 
{
	std_srvs::Trigger ros_service;
	COMP->rosPorts->_base_driver_init_srvcli.call(ros_service);

	ROSRos_core::Std_srvs_TriggerResponse answer;
	
	// implement your query handling logic here and fill in the answer object
	answer.setMessage(ros_service.response.message);
	answer.setSuccess(ros_service.response.success);
	
	this->server->answer(id, answer);
}
