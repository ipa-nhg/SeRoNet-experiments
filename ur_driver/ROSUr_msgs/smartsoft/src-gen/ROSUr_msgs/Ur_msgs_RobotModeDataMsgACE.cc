//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "ROSUr_msgs/Ur_msgs_RobotModeDataMsgACE.hh"
#include <ace/SString.h>

// serialization operator for element Ur_msgs_RobotModeDataMsg
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSUr_msgsIDL::Ur_msgs_RobotModeDataMsg &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element timestamp
	good_bit = good_bit && cdr.write_ulonglong(data.timestamp);
	// serialize list-element is_robot_connected
	good_bit = good_bit && cdr.write_boolean(data.is_robot_connected);
	// serialize list-element is_real_robot_enabled
	good_bit = good_bit && cdr.write_boolean(data.is_real_robot_enabled);
	// serialize list-element is_power_on_robot
	good_bit = good_bit && cdr.write_boolean(data.is_power_on_robot);
	// serialize list-element is_emergency_stopped
	good_bit = good_bit && cdr.write_boolean(data.is_emergency_stopped);
	// serialize list-element is_protective_stopped
	good_bit = good_bit && cdr.write_boolean(data.is_protective_stopped);
	// serialize list-element is_program_running
	good_bit = good_bit && cdr.write_boolean(data.is_program_running);
	// serialize list-element is_program_paused
	good_bit = good_bit && cdr.write_boolean(data.is_program_paused);
	
	return good_bit;
}

// de-serialization operator for element Ur_msgs_RobotModeDataMsg
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSUr_msgsIDL::Ur_msgs_RobotModeDataMsg &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize string-type element timestamp
	ACE_CDR::ULongLong data_timestamp_ll;
	good_bit = good_bit && cdr.read_ulonglong(data_timestamp_ll);
	data.timestamp = data_timestamp_ll;
	// deserialize type element is_robot_connected
	good_bit = good_bit && cdr.read_boolean(data.is_robot_connected);
	// deserialize type element is_real_robot_enabled
	good_bit = good_bit && cdr.read_boolean(data.is_real_robot_enabled);
	// deserialize type element is_power_on_robot
	good_bit = good_bit && cdr.read_boolean(data.is_power_on_robot);
	// deserialize type element is_emergency_stopped
	good_bit = good_bit && cdr.read_boolean(data.is_emergency_stopped);
	// deserialize type element is_protective_stopped
	good_bit = good_bit && cdr.read_boolean(data.is_protective_stopped);
	// deserialize type element is_program_running
	good_bit = good_bit && cdr.read_boolean(data.is_program_running);
	// deserialize type element is_program_paused
	good_bit = good_bit && cdr.read_boolean(data.is_program_paused);
	
	return good_bit;
}

// serialization operator for CommunicationObject Ur_msgs_RobotModeDataMsg
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const ROSUr_msgs::Ur_msgs_RobotModeDataMsg &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject Ur_msgs_RobotModeDataMsg
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, ROSUr_msgs::Ur_msgs_RobotModeDataMsg &obj)
{
	return cdr >> obj.set();
}
